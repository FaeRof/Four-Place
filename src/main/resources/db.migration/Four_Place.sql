CREATE TYPE user_type AS ENUM ('ADMIN', 'WAITER', 'USER', 'KITCHEN', 'COPYRIGHTED');

CREATE TABLE "accounts"
(
    "id"            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "user_id"       bigint,
    "user_type"     user_type,
    "restaurant_id" int,
    "is_active"     boolean
);

CREATE TABLE "users"
(
    "id"         SERIAL PRIMARY KEY NOT NULL,
    "username"   varchar,
    "name"       varchar(100),
    "surname"    varchar(100),
    "birth_date" date,
    "role_id"    int                NOT NULL,
    "phone"      varchar(20),
    "email"      varchar(100),
    "password"   varchar(30)
);

CREATE TABLE "restaurants"
(
    "id"      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "owner"   varchar(100),
    "name"    varchar(100),
    "menu_id" int
);

CREATE TYPE status_type AS ENUM ('getting_ready', 'canceled', 'order_is_accepted', 'pending', 'ready');

CREATE TABLE "orders"
(
    "id"            SERIAL PRIMARY KEY NOT NULL,
    "name_orders"   varchar(50)        NOT NULL,
    "user_id"       bigint,
    "restaurant_id" int,
    "status_type"   status_type,
    "order_date"    date,
    "coupon"        varchar(50)
);

CREATE TABLE "food_positions"
(
    "id"            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "dish_type"     int,
    "dish_name"     varchar(50),
    "availability"  boolean,
    "cooking_time"  time,
    "restaurant_id" int
);

CREATE TABLE "tables"
(
    "id"            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "number"        varchar(50),
    "seats"         int,
    "restaurant_id" int
);

CREATE TABLE "dish_type"
(
    "id"            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "dish_name"     varchar(50),
    "restaurant_id" int,
    "is_visible"    boolean
);

CREATE TYPE poster_type AS ENUM ('VENUE_NEWS', 'USER_REVIEW', 'PHOTO');

CREATE TABLE "news"
(
    "id"            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "poster_type"   poster_type,
    "restaurant_id" int,
    "account_id"    int,
    "description"   varchar(3000)
);

CREATE TABLE "news_photo"
(
    "id"      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "path"    varchar(200),
    "file"    bytea,
    "name"    varchar(50),
    "news_id" int
);

CREATE TABLE "coupones"
(
    "id"               INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "restaurant_id"    int,
    "start_date"       date,
    "end_date"         date,
    "code"             serial,
    "is_active"        boolean,
    "is_feed"          boolean,
    "created_datetime" time
);

CREATE TABLE "coupones_users"
(
    "coupon_id" int,
    "user_id"   int,
    "is_used"   boolean
);

CREATE TABLE "sales_feed"
(
    "id"            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "description"   varchar(5000),
    "restaurant_id" int,
    "position_id"   int
);

CREATE TABLE "hot_offer_feed"
(
    "id"            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "description"   varchar(5000),
    "restaurant_id" int
);

ALTER TABLE "orders"
    ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "orders"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("id");

ALTER TABLE "dish_type"
    ADD FOREIGN KEY ("id") REFERENCES "food_positions" ("dish_type");

ALTER TABLE "food_positions"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("menu_id");

ALTER TABLE "news"
    ADD FOREIGN KEY ("account_id") REFERENCES "accounts" ("id");

ALTER TABLE "tables"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("id");

ALTER TABLE "coupones"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("id");

ALTER TABLE "coupones_users"
    ADD FOREIGN KEY (coupon_id) REFERENCES "coupones" ("id");

ALTER TABLE "coupones_users"
    ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "accounts"
    ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "accounts"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("id");

ALTER TABLE "sales_feed"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("id");

ALTER TABLE "hot_offer_feed"
    ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("id");
